<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:VidCoder.Controls"
	xmlns:local="clr-namespace:VidCoder.Themes"
	xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
	<SolidColorBrush x:Key="AlternateBackgroundBrush" Color="#222222" />
	<SolidColorBrush x:Key="ToolBarBackgroundBrush" Color="#555555" />
	<SolidColorBrush x:Key="WindowBrush" Color="Black" />
	<SolidColorBrush x:Key="WindowTextBrush" Color="White" />
	<SolidColorBrush x:Key="SplitterBrush" Color="#636363" />
	<SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="Black" />
	<SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrushKey}" Color="White" />
	<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#333333" />
	<SolidColorBrush x:Key="ControlTextBrush" Color="White" />
	<SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White" />




	<!--  Test zone!  -->
	<SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkBrushKey}" Color="Red" />
	<SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkDarkBrushKey}" Color="Blue" />
	<SolidColorBrush x:Key="{x:Static SystemColors.ControlLightBrushKey}" Color="Green" />
	<SolidColorBrush x:Key="{x:Static SystemColors.ControlLightLightBrushKey}" Color="LightCyan" />
	<SolidColorBrush x:Key="{x:Static SystemColors.ActiveBorderBrushKey}" Color="Pink" />
	<SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionBrushKey}" Color="DarkGoldenrod" />
	<SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrush}" Color="DarkKhaki" />
	<SolidColorBrush x:Key="{x:Static SystemColors.AppWorkspaceBrushKey}" Color="Purple" />
	<SolidColorBrush x:Key="{x:Static SystemColors.GradientActiveCaptionBrushKey}" Color="LightGreen" />
	<SolidColorBrush x:Key="{x:Static SystemColors.GradientInactiveCaptionBrushKey}" Color="Yellow" />
	<SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrushKey}" Color="GreenYellow" />
	<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Yellow" />
	<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Indigo" />
	<SolidColorBrush x:Key="{x:Static SystemColors.HotTrackBrushKey}" Color="SaddleBrown" />
	<SolidColorBrush x:Key="{x:Static SystemColors.InactiveBorderBrushKey}" Color="SeaGreen" />
	<SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionBrushKey}" Color="Snow" />
	<SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionTextBrushKey}" Color="Salmon" />
	<SolidColorBrush x:Key="{x:Static SystemColors.InfoBrushKey}" Color="Honeydew" />
	<SolidColorBrush x:Key="{x:Static SystemColors.InfoTextBrushKey}" Color="Chartreuse" />
	<SolidColorBrush x:Key="{x:Static SystemColors.MenuBrushKey}" Color="Coral" />
	<SolidColorBrush x:Key="{x:Static SystemColors.MenuBarBrushKey}" Color="PaleGoldenrod" />
	<SolidColorBrush x:Key="{x:Static SystemColors.MenuHighlightBrushKey}" Color="BlueViolet" />
	<SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrushKey}" Color="PaleVioletRed" />
	<SolidColorBrush x:Key="{x:Static SystemColors.ScrollBarBrushKey}" Color="CadetBlue" />






	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle
						Margin="2"
						SnapsToDevicePixels="true"
						Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
						StrokeDashArray="1 2"
						StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="Button.Static.Background" Color="#333333" />
	<SolidColorBrush x:Key="Button.Static.Border" Color="#DDDDDD" />
	<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3C7FB1" />
	<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#BEE6FD" />
	<SolidColorBrush x:Key="Button.Pressed.Background" Color="#2C628B" />
	<SolidColorBrush x:Key="Button.Pressed.Border" Color="#C4E5F6" />
	<SolidColorBrush x:Key="Button.Disabled.Background" Color="#5D5F60" />
	<SolidColorBrush x:Key="Button.Disabled.Border" Color="#C4C4C4" />
	<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#DDDDDD" />
	<Style TargetType="Button">
		<Style.Triggers>
			<DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
				<Setter Property="Foreground" Value="#AFAFAF" />
			</DataTrigger>
		</Style.Triggers>
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border
						x:Name="border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true">
						<ContentPresenter
							x:Name="contentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Focusable="False"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
							<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	
	
	

	<SolidColorBrush x:Key="ComboBox.Static.Background" Color="#282828"></SolidColorBrush>
	<SolidColorBrush x:Key="ComboBox.Static.Border" Color="#606060" />
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="Black" />
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#5D5E60" />
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="White" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="#43474C" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#7EB4EA" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="Black" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#7EB4EA" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" Color="#1D5791" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#4B77A3" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="White" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Background" Color="#2164A8" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#569DE5" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="Black" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#569DE5" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Background" Color="#2164A8" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#569DE5" />
	
	<SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#BFBFBF" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#282828" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#A8A8A8" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="Black" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#A8A8A8" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#B7B7B7" />
	<Style x:Key="ComboBoxToggleButton2" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="ClickMode" Value="Press" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border
						x:Name="templateRoot"
						Background="{StaticResource ComboBox.Static.Background}"
						BorderBrush="{StaticResource ComboBox.Static.Border}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true">
						<Border
							x:Name="splitBorder"
							Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
							Margin="0"
							HorizontalAlignment="Right"
							BorderBrush="Transparent"
							BorderThickness="1"
							SnapsToDevicePixels="true">
							<Path
								x:Name="arrow"
								Margin="0"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
								Fill="{StaticResource ComboBox.Static.Glyph}" />
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
							<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
							<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
						</MultiDataTrigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
							<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
							<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
						</MultiDataTrigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
							<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
							<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
						</MultiDataTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
							<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
							<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
			</Grid.ColumnDefinitions>
			<Popup
				x:Name="PART_Popup"
				Grid.ColumnSpan="2"
				Margin="1"
				AllowsTransparency="true"
				IsOpen="{Binding IsDropDownOpen,
				                 Mode=TwoWay,
				                 RelativeSource={RelativeSource TemplatedParent}}"
				Placement="Bottom"
				PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<mwt:SystemDropShadowChrome
					x:Name="shadow"
					MinWidth="{Binding ActualWidth,
					                   ElementName=templateRoot}"
					MaxHeight="{TemplateBinding MaxDropDownHeight}"
					Color="Transparent">
					<Border
						x:Name="dropDownBorder"
						Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
						BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
						BorderThickness="1">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
								<Canvas
									x:Name="canvas"
									Width="0"
									Height="0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top">
									<Rectangle
										x:Name="opaqueRect"
										Width="{Binding ActualWidth,
										                ElementName=dropDownBorder}"
										Height="{Binding ActualHeight,
										                 ElementName=dropDownBorder}"
										Fill="{Binding Background,
										               ElementName=dropDownBorder}" />
								</Canvas>
								<ItemsPresenter
									x:Name="ItemsPresenter"
									KeyboardNavigation.DirectionalNavigation="Contained"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</Border>
				</mwt:SystemDropShadowChrome>
			</Popup>
			<ToggleButton
				x:Name="toggleButton"
				Grid.ColumnSpan="2"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				IsChecked="{Binding IsDropDownOpen,
				                    Mode=TwoWay,
				                    RelativeSource={RelativeSource TemplatedParent}}"
				Style="{StaticResource ComboBoxToggleButton2}" />
			<ContentPresenter
				x:Name="contentPresenter"
				Margin="{TemplateBinding Padding}"
				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
				VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				Content="{TemplateBinding SelectionBoxItem}"
				ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
				ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
				ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
				IsHitTestVisible="false"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
				<Setter TargetName="shadow" Property="Margin" Value="0 0 5 5" />
				<Setter TargetName="shadow" Property="Color" Value="#71000000" />
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter TargetName="dropDownBorder" Property="Height" Value="95" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping" Value="true" />
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</MultiTrigger>
			<Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
				<Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
				<Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<SolidColorBrush x:Key="TextBox.Static.Background" Color="Black" />
	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
			</Grid.ColumnDefinitions>
			<Popup
				x:Name="PART_Popup"
				Grid.ColumnSpan="2"
				AllowsTransparency="true"
				IsOpen="{Binding IsDropDownOpen,
				                 RelativeSource={RelativeSource TemplatedParent}}"
				Placement="Bottom"
				PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<mwt:SystemDropShadowChrome
					x:Name="shadow"
					MinWidth="{Binding ActualWidth,
					                   ElementName=templateRoot}"
					MaxHeight="{TemplateBinding MaxDropDownHeight}"
					Color="Transparent">
					<Border
						x:Name="dropDownBorder"
						Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
						BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
						BorderThickness="1">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
								<Canvas
									x:Name="canvas"
									Width="0"
									Height="0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top">
									<Rectangle
										x:Name="opaqueRect"
										Width="{Binding ActualWidth,
										                ElementName=dropDownBorder}"
										Height="{Binding ActualHeight,
										                 ElementName=dropDownBorder}"
										Fill="{Binding Background,
										               ElementName=dropDownBorder}" />
								</Canvas>
								<ItemsPresenter
									x:Name="ItemsPresenter"
									KeyboardNavigation.DirectionalNavigation="Contained"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</Border>
				</mwt:SystemDropShadowChrome>
			</Popup>
			<ToggleButton
				x:Name="toggleButton"
				Grid.ColumnSpan="2"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				IsChecked="{Binding IsDropDownOpen,
				                    Mode=TwoWay,
				                    RelativeSource={RelativeSource TemplatedParent}}"
				Style="{StaticResource ComboBoxToggleButton2}" />
			<Border
				x:Name="border"
				Margin="{TemplateBinding BorderThickness}"
				Background="{StaticResource TextBox.Static.Background}">
				<TextBox
					x:Name="PART_EditableTextBox"
					Margin="{TemplateBinding Padding}"
					HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
					IsReadOnly="{Binding IsReadOnly,
					                     RelativeSource={RelativeSource TemplatedParent}}"
					Style="{StaticResource ComboBoxEditableTextBox}" />
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter TargetName="border" Property="Opacity" Value="0.56" />
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="true">
				<Setter Property="Foreground" Value="Black" />
			</Trigger>
			<Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
				<Setter TargetName="shadow" Property="Margin" Value="0 0 5 5" />
				<Setter TargetName="shadow" Property="Color" Value="#71000000" />
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter TargetName="dropDownBorder" Property="Height" Value="95" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping" Value="true" />
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</MultiTrigger>
			<Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
				<Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
				<Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
		<Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="Padding" Value="6 3 5 3" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false" />
				<Setter Property="Padding" Value="2" />
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
			</Trigger>
		</Style.Triggers>
	</Style>



	<SolidColorBrush x:Key="TabItem.Selected.Background" Color="Black"/>
	<SolidColorBrush x:Key="TabItem.Selected.Border" Color="#6B6B6B"/>
	<Style TargetType="{x:Type TabControl}">
		<Setter Property="Padding" Value="2"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
						<Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>




	<SolidColorBrush x:Key="TabItem.Static.Background" Color="#3D3D3D" />
	<SolidColorBrush x:Key="TabItem.Static.Border" Color="#6B6B6B"/>
	<SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="#0A2F54" />
	<SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#386FA5"/>
	<SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#333333"/>
	<SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#5B5B5B"/>
	<Style TargetType="TabItem">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
						<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
							<Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
						</Border>
						<ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,-2,0,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,0,-2,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="0,-2,-2,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,-2,-2,0"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>