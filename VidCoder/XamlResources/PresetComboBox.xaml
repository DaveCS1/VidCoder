<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:VidCoder.Controls"
	xmlns:local="clr-namespace:VidCoder.XamlResources"
	xmlns:res="clr-namespace:VidCoder.Resources"
	xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	xmlns:converters="clr-namespace:VidCoder.Converters">
	<converters:VisibilityConverter x:Key="VisibilityConverter" />

	<DataTemplate x:Key="PresetTemplate">
		<StackPanel Orientation="Horizontal">
			<TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}">
				<TextBlock.Style>
					<Style TargetType="{x:Type TextBlock}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding Preset.IsBuiltIn}" Value="False">
								<Setter Property="Foreground" Value="#0B4BC2" />
								<Setter Property="FontWeight" Value="SemiBold" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Preset.IsQueue}" Value="True">
								<Setter Property="Foreground" Value="#222222" />
								<Setter Property="FontWeight" Value="Normal" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>
			<TextBlock
				Margin="7 0 0 0"
				VerticalAlignment="Center"
				FontSize="11"
				FontStyle="Italic"
				Foreground="Gray"
				Text="{x:Static res:MainRes.ModifiedAffix}"
				Visibility="{Binding Preset.IsModified,
				                     Converter={StaticResource VisibilityConverter}}" />
		</StackPanel>
	</DataTemplate>

	<Style x:Key="ComboBoxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle
						Margin="4 4 21 4"
						SnapsToDevicePixels="true"
						Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
						StrokeDashArray="1 2"
						StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Offset="0" Color="#F3F3F3" />
		<GradientStop Offset="0.5" Color="#EBEBEB" />
		<GradientStop Offset="0.5" Color="#DDDDDD" />
		<GradientStop Offset="1" Color="#CDCDCD" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />
	<Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

	<Style x:Key="ComboBoxReadonlyToggleButton" TargetType="ToggleButton">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="ClickMode" Value="Press" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<themes:ButtonChrome
						x:Name="Chrome"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						RenderMouseOver="{TemplateBinding IsMouseOver}"
						RenderPressed="{TemplateBinding IsPressed}"
						SnapsToDevicePixels="true">
						<Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" HorizontalAlignment="Right">
							<Path
								x:Name="Arrow"
								Margin="3 1 0 0"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Data="{StaticResource DownArrowGeometry}"
								Fill="Black" />
						</Grid>
					</themes:ButtonChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="Chrome" Property="RenderPressed" Value="true" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="TextBoxBorder" MappingMode="Absolute" StartPoint="0,0" EndPoint="0,20">
		<GradientStop Offset="0.05" Color="#ABADB3" />
		<GradientStop Offset="0.07" Color="#E2E3EA" />
		<GradientStop Offset="1" Color="#E3E9EF" />
	</LinearGradientBrush>
	<Style x:Key="ComboBoxEditableTextBox" TargetType="TextBox">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer
						x:Name="PART_ContentHost"
						Background="Transparent"
						Focusable="false"
						HorizontalScrollBarVisibility="Hidden"
						VerticalScrollBarVisibility="Hidden" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="ClickMode" Value="Press" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<themes:ButtonChrome
						x:Name="Chrome"
						Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						RenderMouseOver="{TemplateBinding IsMouseOver}"
						RenderPressed="{TemplateBinding IsPressed}"
						RoundCorners="false"
						SnapsToDevicePixels="true">
						<Path
							x:Name="Arrow"
							Margin="0 1 0 0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Data="{StaticResource DownArrowGeometry}"
							Fill="Black" />
					</themes:ButtonChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="Chrome" Property="RenderPressed" Value="true" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type controls:PresetComboBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="MinWidth" Value="140" />
		<Setter Property="MaxWidth" Value="220" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="Padding" Value="6 5" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid x:Name="templateRoot" SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
						</Grid.ColumnDefinitions>
						<Popup
							x:Name="PART_Popup"
							Grid.ColumnSpan="2"
							Margin="1"
							AllowsTransparency="True"
							IsOpen="{Binding IsDropDownOpen,
							                 Mode=TwoWay,
							                 RelativeSource={RelativeSource TemplatedParent}}"
							Placement="Bottom"
							PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<themes:SystemDropShadowChrome
								x:Name="shadow"
								MinWidth="250"
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								Color="Transparent">
								<Border
									x:Name="DropDownBorder"
									Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
									BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
									BorderThickness="1">
									<ScrollViewer x:Name="DropDownScrollViewer">
										<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
											<Canvas
												x:Name="canvas"
												Width="0"
												Height="0"
												HorizontalAlignment="Left"
												VerticalAlignment="Top">
												<Rectangle
													x:Name="OpaqueRect"
													Width="{Binding ActualWidth,
													                ElementName=DropDownBorder}"
													Height="{Binding ActualHeight,
													                 ElementName=DropDownBorder}"
													Fill="{Binding Background,
													               ElementName=DropDownBorder}" />
											</Canvas>
											<controls:PresetTreeViewContainer x:Name="treeViewContainer" />
										</Grid>
									</ScrollViewer>
								</Border>
							</themes:SystemDropShadowChrome>
						</Popup>
						<ToggleButton
							x:Name="toggleButton"
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsChecked="{Binding IsDropDownOpen,
							                    Mode=TwoWay,
							                    RelativeSource={RelativeSource TemplatedParent}}">
							<ToggleButton.Style>
								<Style TargetType="{x:Type ToggleButton}">
									<Setter Property="OverridesDefaultStyle" Value="True" />
									<Setter Property="IsTabStop" Value="False" />
									<Setter Property="Focusable" Value="False" />
									<Setter Property="ClickMode" Value="Press" />
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ToggleButton}">
												<Border
													x:Name="templateRoot"
													BorderBrush="#ACACAC"
													BorderThickness="{TemplateBinding BorderThickness}"
													SnapsToDevicePixels="True">
													<Border.Background>
														<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
															<GradientStop Offset="0" Color="#F0F0F0" />
															<GradientStop Offset="1" Color="#E5E5E5" />
														</LinearGradientBrush>
													</Border.Background>
													<Border
														x:Name="splitBorder"
														Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
														Margin="0"
														HorizontalAlignment="Right"
														BorderBrush="Transparent"
														BorderThickness="1"
														SnapsToDevicePixels="True">
														<Path
															x:Name="Arrow"
															Margin="0"
															HorizontalAlignment="Center"
															VerticalAlignment="Center"
															Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
															Fill="#606060" />
													</Border>
												</Border>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter TargetName="Arrow" Property="Fill" Value="Black" />
													</Trigger>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
														</MultiDataTrigger.Conditions>
														<Setter TargetName="templateRoot" Property="Background">
															<Setter.Value>
																<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
																	<GradientStop Offset="0" Color="#ECF4FC" />
																	<GradientStop Offset="1" Color="#DCECFC" />
																</LinearGradientBrush>
															</Setter.Value>
														</Setter>
														<Setter TargetName="templateRoot" Property="BorderBrush" Value="#7EB4EA" />
													</MultiDataTrigger>
													<Trigger Property="IsPressed" Value="True">
														<Setter TargetName="Arrow" Property="Fill" Value="Black" />
													</Trigger>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
														</MultiDataTrigger.Conditions>
														<Setter TargetName="templateRoot" Property="Background">
															<Setter.Value>
																<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
																	<GradientStop Offset="0" Color="#FFDAECFC" />
																	<GradientStop Offset="1" Color="#FFC4E0FC" />
																</LinearGradientBrush>
															</Setter.Value>
														</Setter>
														<Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF569DE5" />
													</MultiDataTrigger>
													<Trigger Property="IsEnabled" Value="False">
														<Setter TargetName="Arrow" Property="Fill" Value="#FFBFBFBF" />
													</Trigger>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
														</MultiDataTrigger.Conditions>
														<Setter TargetName="templateRoot" Property="Background" Value="#FFF0F0F0" />
														<Setter TargetName="templateRoot" Property="BorderBrush" Value="#FFD9D9D9" />
													</MultiDataTrigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>
						<ContentPresenter
							x:Name="ContentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{Binding SelectedItem,
							                  RelativeSource={RelativeSource FindAncestor,
							                                                 AncestorLevel=1,
							                                                 AncestorType={x:Type ComboBox}}}"
							ContentTemplate="{StaticResource PresetTemplate}"
							IsHitTestVisible="False" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
							<Setter TargetName="shadow" Property="Margin" Value="0 0 5 5" />
							<Setter TargetName="shadow" Property="Color" Value="#71000000" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="True" />
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</MultiTrigger>
						<Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
							<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
							<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>